[
  {
    "path": "posts/2021-01-28-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "Resident Labour Force by Age Group, comparison between 2009 and 2019.",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": {}
      }
    ],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\nData Visualisation Link (Tableau Public) - https://public.tableau.com/profile/xinyue.bai#!/vizhome/DataVizMakeover1_16118346604830/Dashboard1?publish=yes\n1. Critiques and Suggestions\n\n1.1 Clarity\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n\n\nThere is no y-axis on the graph. Readers can only see the trend of resident labour force percentage by age group. When they want to know the approximate values for certain age groups, they need to look up the table at the bottom, which is not very clear and efficient.\n\n\nAdd y-axis and points for each age group on the graph to facilitate easy reading.\n\n\n\n\nThe purpose of this visualisation is not conveyed well enough by the title. This visualisation aims to compare the share of resident labour force of different age groups between 2009 and 2019. The title “resident labour force by age” is oversimplified.\n\n\nChange the title to “Share of Resident Labour Force by Age Group, 2009 vs 2019 (June)”.\n\n\n\n\nIt’s redundant to have the table at the bottom as it contains the same information as in the line chart. There is no need to have separate representation.\n\n\nMove the table information to the existing line chart, by adding text label for each point.\n\n\n\n\nIn the statement, it mentions the labour force participation rate (LFPR), however in this visualisation, there is no information or visualisation about LFPR.\n\n\nAdd a separate visualisation representing LFPR.\n\n\n\n\nIt’s not clear and easy to see how median age is derived based on this visualisation.\n\n\nAdd a separate visualisation to show how the median age of resident labour force is derived.\n\n\n1.2 Aesthetics\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n\n\nSource and note don’t align, which makes this visualisation look messy at the bottom.\n\n\nSet both source and note to be left or central alignment.\n\n\n\n\nNot efficient use of space, with much white spaces in the top left and right segments. Legend on the line is good, but it’s a bit crowded at the bottom right corner. There are many text components in that area.\n\n\nOptimise use of space.\n\n\n\n\nThe grey and blue line colours are hard to distinguish.\n\n\nChange colour of the two lines.\n\n\n2. Proposed Design\n\n3. Data Visualisation Step-by-Step\n3.1 Data Preparation\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nTable 5 “Resident Labour Force Participation Rate by Age and Sex, 2009-2019 (June)” and Table 7 “Resident Labour Force Aged Fifteen Years and Over by Age and Sex, 2009-2019 (June)” are used for the visualisation.\n\n\n\n\n\n\nFor table 5, only columns Age Group, 2009 and 2019, as well as rows 15-19, 20-24, 25-29, 30-34, 35-30, 40-44, 45-49, 50-54, 55-59, 60-64, 65-69 and 70&over are extracted. Similarly, the same data cleaning procedure was performed for table 7, as for table 5. Below is the final datasets.\n\n\n\n\n\n\nIn order to find the median age of resident labour force, two charts for years 2009 and 2019 were plotted respectively, as shown below. In both years, the 50th percentile falls within age group 40-44. Therefore, a new sheet in table 7 called “Age and year” was created, and the 40-44 age group was split into five values (i.e. 40,41,42,43,44). The same number of resident labour force (i.e. aged 40-44 resident labour force / 5) was assigned to each age.\n\n\n\n\n\n\n\n\n\n\n3.2 Tableau Works\n3.2.1 Import Data\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nImport excel worksheets and create an extract of the data.\n\n\n\n\n\n\nPivot the labour force participation rate data and rename the fields.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSN\nActions\nScreenshots\n1.\nImport excel worksheets and create an extract of the data.\n\n2.\nPivot the labour force participation rate data and rename the fields.\n\n\n\n\n\n\n\n\n3.2.2 Visualisation 1\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nDrag Age Group under T7_T worksheet to Columns.\n\n\n\n\n\n\nDrag Measure Names to Filters and only tick fields of 2009 and 2019.\n\n\n\n\n\n\nSelect Line option in the Marks panel on the left\n\n\n\n\n\n\nDrag Measure Values to Rows and Label, also drag Measure Names to Color.\n\n\n\n\n\n\nIn the Measure Values section, apply Table Calculation (Percentage of Total) to both SUM(2009) and SUM(2019).\n\n\n\n\n\n\nModify the title of y-axis (right click Edit Axis) and the number format of y-axis (right click Format -> Axis -> Numbers -> Percentage).\n\n\n\n\n\n\nChange the name, title and colour of the legend (right click Edit Alias, Edit Title and Edit Colors).\n\n\n\n\n\n\nModify the title of the worksheet.\n\n\n\n\nFinal Look of Visualisation 1\n\n3.2.3 Visualisation 2\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nDrag Age Group and Year under T5_T to Columns.\n\n\n\n\n\n\nDrag LFPR under T5_T to Rows.\n\n\n\n\n\n\nDrag Year to Color.\n\n\n\n\n\n\nDray LFPR to Label.\n\n\n\n\n\n\nHide Year’s header (right click Year -> untick Show Header).\n\n\n\n\n\n\nChange the color of legend.\n\n\n\n\n\n\nModify the title of the worksheet.\n\n\n\n\nFinal Look of Visualisation 2\n\n3.2.4 Visualisation 3\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nDrag 2009 under Age and year to Rows.\n\n\n\n\n\n\nApply Quick Table Calculations (Percent of Total) on 2009.\n\n\n\n\n\n\nDrag Year to Color.\n\n\n\n\n\n\nDrag Age Group under Age and year to Label.\n\n\n\n\n\n\nAdd reference line on the y-axis to point out median age at the 50th percentile (right click on the y-axis -> Add Reference Line -> Value: 0.5, Constant; Label: Custom, Median Age; Line, choose the second option).\n\n\n\n\nFinal Look of Visualisation 3\n\n3.2.5 Visualisation 4\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nPerform the same procedure as for visualisation 3, using data of 2019 under Age and year instead of 2009.\n\n\n\n\n\n\nChange the color of bar.\n\n\n\n\nFinal Look of Visualisation 4\n\n3.2.6 Dashboard\n\n\nSN\n\n\nActions\n\n\nScreenshots\n\n\n\n\nCreate a dashboard to combine 4 visualisations and lay out accordingly.\n\n\n\n\n4. Final Data Visualisation Output\n\n5. Major Observations\nThe working population in Singapore is increasing, as for most age groups, labour force participation rate increased from 2009 to 2019. In particular, over 80% of residents aged between 25 and 54 are in the labour force.\nThe composition of resident labour forces in Singapore is changing. In comparison to 2009, share of resident labours aged between 15 and 54 decreased in 2019, whereas for labours aged over 55 years old, their shares in total working population increased in 2019. There are more older labours in the community. This phenomenon can be explained by the economic growth and more accessible health care facilities in Singapore.\nAs we can see from resident labour force’ age group distribution graph, the percentage of older labours increased dramatically from 2009 to 2019. Labours aged over 45 years old was around 40% of working population in 2009, but it’s approaching 50% in 2019. As a result, the median age of residents labours moved from 41 in 2009 to 44 in 2019.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-01-29T00:57:09+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": "https://www.linkedin.com/in/theabai/"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-01-04T20:58:52+08:00",
    "input_file": "welcome.utf8.md"
  },
  {
    "path": "posts/2021-01-04-my-frist-post/",
    "title": "My first post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "MS. Bai Xinyue",
        "url": "https://www.linkedin.com/in/theabai/"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n1.0 Overview\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\nThere are three broad reasons for computing a correlation matrix.\nTo reveal the relationship between highdimensional variables pairwisely.\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\nRendering the value of a correlation to depict its sign and magnitude, and\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\n2.0 Installing and Launching R Packages\nBefore you get started, you are required:\nto start a new R project, and\nto create a new R Markdown document.\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\n\n\npackages = c('ggpubr', 'tidyverse')\n\nfor(p in packages){library\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n3.0 Importing and Preparing The Data Set\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\n3.1 Importing Data\nFirst, let us import the data into R by using read_csv() of readr package.\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\n\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\n4.0 Univariate EDA with Histogram\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\n\n\n\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\n\n\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ndensity <- ggplot(data=wine, aes(x= density)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\npH <- ggplot(data=wine, aes(x= pH)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\nNext, the ggarrange function of ggpur package is used to group these histograms together.\n\n\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n",
    "preview": "posts/2021-01-04-my-frist-post/my-frist-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-05T20:29:29+08:00",
    "input_file": "my-frist-post.utf8.md"
  }
]
