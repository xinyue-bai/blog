[
  {
    "path": "posts/2021-02-19-dataviz-makeover-2/",
    "title": "DataViz Makeover 2",
    "description": "Dive deeper into survey results of public's willingness on Covid-19 vaccination.",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": {}
      }
    ],
    "date": "2021-02-19",
    "categories": [
      "DataViz Makeover"
    ],
    "contents": "\n\nContents\n1. Background Information\n2. Critiques and Suggestions\n2.1 Clarity\n2.2 Aesthetics\n\n3. Proposed Design\n3.1 Sketch\n3.2 Advantages of Proposed Design\n\n4. Data Visualisation Step-by-Step\n\nData Visualisation Link (Tableau Public) - https://public.tableau.com/profile/xinyue.bai#!/vizhome/ofStronglyAgree-gettingCOVID/DatavizMakeover2?publish=yes\n1. Background Information\nFor this visualisation makeover, I have used data from Imperial College London YouGov Covid 19 Behaviour Tracker Data Hub. This data gathers global insights on people’s behaviours in response to COVID-19 covering 29 countries, in the form of survey questionnaire. In particular, this post is interested in exploring the willingness of the public on COVID-vaccination. In this blog, I will makeover visualisation on vaccine willingness done by one of the research scientists, by examining the following 3 survey questions in the context of different gender and employment status:\n1. If a Covid-19 vaccine were made available to me this week, I would definitely get it.\n2. I am worried about getting COVID19.\n3. I am worried about potential side effects of a COVID19 vaccine.\n2. Critiques and Suggestions\n\n\n\n2.1 Clarity\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n1\n\n\nVisualisation on the left is intended to show “which country is more pro-vaccine”, by computing the percentage of each response and combining them into a percentage stacked bar chart. However, for each country, it’s not easy to see the proportion of pro-vaccine and compare it among different countries.\n\n\nSort countries by proportion of pro-vaccine responses in descending order.\n\n\n2\n\n\nMoreover, scaling each bar into the same height is not clear enough to compare the difference between pro-vaccine responses and anti-vaccine responses.\n\n\nPlace neutral responses at centre 0, negative value showing proportion of disagree responses and positive value showing proportion of agree responses.\n\n\n3\n\n\nIt’s hard to distinguish bars having the same length.\n\n\nAdd value label on each bar.\n\n\n4\n\n\nLegend is not very clear, i.e. what does 2, 3, 4 represent specifically?\n\n\nChange 2, 3, 4 to 2 – Agree, 3 – I don’t know, 4 – Disagree respectively.\n\n\n5\n\n\nVisualisation on the right is generally straightforward and clear. However, the simple percentage does not reflect statistical measures, how much you can expect your service results to reflect the view from the overall population. For example, if we have a high proportion of strongly agree responses with a wide margin of error, then this survey result is not very reliable.\n\n\nCalculate confidence interval for each value to get a more comprehensive view of the survey results.\n\n\n6\n\n\nMoreover, this visualisation is not convincing enough in a way that only high level view of the survey results is presented and insights from different angles are not revealed. For example, by examining deeper into gender level, males are generally more willing to get vaccinated than females respondents.\n\n\nExplore survey results from various perspectives, such as gender and employment status, and the relation between other survey questions.\n\n\n2.2 Aesthetics\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n1\n\n\nIt’s redundant and distractive to use five different colours for each response in the left visualisation, making it hard to view the survey results. | Use the same colour for the same group (1.agree 2.neutral 3. disagree) with different hue level. For example, dark green for strongly agree, light green for agree.\n\n\nUse the same colour for the same group (1.agree 2.neutral 3. disagree) with different hue level. For example, dark green for strongly agree, light green for agree.\n\n\n2\n\n\nThe x-axis of two visualisations are not consistent, the first plot has no decimal place whereas the second plot has 2 decimal places.\n\n\nMake them consistent.\n\n\n3\n\n\nGenerally good axis marks in twenties and grid lines to facilitate easy readings, clear use of fonts, font sizes and layout with very straightforward titles.\n\n\nFollow and format to ensure so.\n\n\n3. Proposed Design\n3.1 Sketch\n\n3.2 Advantages of Proposed Design\nThe first visualisation:\n1. Clearly separating the pro-vaccine and anti-vaccine responses into postive and negative x-axis makes audiences easier to detect difference between two types of responses and difference between countries.\n2. Sorting rows according to % of pro-vaccine responses answers the question of “which country is more pro-vaccine” in a more clear way.\nThe second visualisation:\nUsing confidence interval gives audiences a better sense of how reliable is the result.  \nThe third visualisation:\nLooking into result of survey’s questions vac2.1(worry about getting COVID) and vac2.2(worry about potential side effect of vaccine) help audiences better understand the public willingness on Covid-19 vaccination and the potential reasons why the public agrees or disagrees to getting vaccinated.\nOther comments:\nBy applying tooltip, the fourth and fifth visualisation provide audiences with a more comprehensive understanding of the survey results on vaccine willingness at the country level. Similarly, being able to filter via gender and employment status gives insights on the different behaviours within each group.\n4. Data Visualisation Step-by-Step\n\n\n\n",
    "preview": "posts/2021-02-19-dataviz-makeover-2/distill-preview.png",
    "last_modified": "2021-02-19T14:55:04+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-28-dataviz-makeover-1/",
    "title": "My First R Markdown Document",
    "description": "A new article created using the Distill format.",
    "author": [
      {
        "name": "Dr. Kam Tin Seong",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\n1.0 Overview\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\nThere are three broad reasons for computing a correlation matrix.\nTo reveal the relationship between highdimensional variables pairwisely.\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\nRendering the value of a correlation to depict its sign and magnitude, and\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\n2.0 Installing and Launching R Packages\nBefore you get started, you are required:\nto start a new R project, and\nto create a new R Markdown document.\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\n\n\npackages = c('ggpubr', 'tidyverse')\n\nfor(p in packages){library\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n3.0 Importing and Preparing The Data Set\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\n3.1 Importing Data\nFirst, let us import the data into R by using read_csv() of readr package.\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\n\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\n4.0 Univariate EDA with Histogram\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\n\n\n\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\n\n\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ndensity <- ggplot(data=wine, aes(x= density)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\npH <- ggplot(data=wine, aes(x= pH)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\nNext, the ggarrange function of ggpur package is used to group these histograms together.\n\n\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n",
    "preview": "posts/2021-01-28-dataviz-makeover-1/distill-preview.png",
    "last_modified": "2021-01-28T12:08:32+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome",
    "description": "Welcome to my new blog for data visualisation. Hope you enjoy \nreading what I have to say!",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": "https://www.linkedin.com/in/theabai/"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-01-29T12:32:06+08:00",
    "input_file": {}
  }
]
