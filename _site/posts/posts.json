[
  {
    "path": "posts/2021-03-21-dataviz-makeover-3/",
    "title": "DataViz Makeover 3",
    "description": "Dive deeper into the spatio-temporal patterns of armed conflict in selected South-east Asia countries between 2010 - 2020.",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": {}
      }
    ],
    "date": "2021-03-19",
    "categories": [
      "DataViz Makeover"
    ],
    "contents": "\n\nContents\n1. Background Information\n2. Critiques and Suggestions\n2.1 Clarity\n2.2 Aesthetics\n2.3 Interactivity\n\n3. Proposed Design\n3.1 Sketch\n3.2 Advantages of Proposed Design\n\n4. Data Visualisation Step-by-Step\n4.1 Data Preparation\n4.2 Creating Visualisation\n4.2.1 Spatial Analysis Dashboard\n4.2.2 Temporal Analysis Dashboard\n4.2.3 Main Dashboard\n\n5. Major Observations\n\nData Visualisation Link (Tableau Public) - https://public.tableau.com/profile/xinyue.bai#!/vizhome/dataviz_16162565365570/South-eastAsiaArmedConflictAnalysis?publish=yes\n1. Background Information\nFor this visualisation makeover, I have used data from ACLED. ACLED focuses on tracking a range of violent and non-violent actions by political agents, including governments, rebels, militias, identity groups, political parties, external actors, rioters, protesters and civilians. Data collected is used regularly to study trends in political violence and protest around the world. In particular, this post is interested in exploring the spatio-temporal patterns of armed conflict in selected South-east Asia countries, including Cambodia, Indonesia, Laos, Malaysia, Myanmar, Philippines, Thailand and Vietnam, between 2015 and 2020.\nIn this blog, I will makeover visualisation on South-east Asia Armed Conflict provided by Prof.Kam, by looking into the following questions:\nWhere did the event take place?\nWhen did the event take place?\nWho was involved?\nWhat was the number of fatalities of the event?\n2. Critiques and Suggestions\n\n\n\nFigure 1: original visualisation\n\n\n\n2.1 Clarity\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n1\n\n\nY-axis of the line chart does not start at 0, making it hard to compare between event types.\n\n\nMake y-axis start at 0 and make it consistent across all event types.\n\n\n2\n\n\nAlso, the name of y-axis “Count of Sheet1” is unclear.\n\n\nLabel the y-axis as “Count of Event Type”.\n\n\n3\n\n\nIt’s redundant and hard to compare having 6 separate line graphs.\n\n\nCombine 6 graphs into 1 graph and use different colours to represent event types.\n\n\n2.2 Aesthetics\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n4\n\n\nPoints on the map are overlapping. It’s hard to distinguish the event type at each area.\n\n\nApart from a map of events’ exact location, we can have another map to summarise information of events:\nDisplay events in a state/province level instead of precise location.\nUse unclassified choropleth map to demonstrate the event density in each state/province.\nUse pie chart to show the distribution of event type in the tooltip.\n\n\n5\n\n\nOrder of the event type on the line chart is not aligned with the colour legend.\n\n\nMake order of the line chart align with the colour legend.\nMatch the line colour with the colour legend.\n\n\n2.3 Interactivity\n\n\nSN\n\n\nCritique\n\n\nSuggestion\n\n\n6\n\n\nInteraction techniques used in this visualisation are highlighting(event type) and filtering(country), allowing audiences to see the exact location of all events between 2010 - 2015 and the total counts of each event type over the years for every South-East Asia country. However, the interactivity is very limited. For example, what if audiences want to know the location of events in a specific year, as it might be different every year?\n\n\nWe can add more filtering options, such as year, range of dates and event type.\n\n\n7\n\n\nSince only two techniques are used in this case, there are other type of interactivity can be applied to get a more comprehensive understanding of the data.\n\n\nFor example, “Overview first, then details-on-demand” from Shneiderman’s mantra, we can provide a map with an overview of the event frequency with respect to state/region and a pie chart for each state on detailed distribution of event type in the tooltip. Similarly, for each event location, we can include names of two conflict groups (Actor 1 & Actor 2) in the tooltip.\n\n\n3. Proposed Design\n3.1 Sketch\nFigure 2: sketch of proposed design3.2 Advantages of Proposed Design\nProposed design allows more filtering options (e.g. year, range of event date, event type).\nProposed line graph is more succinct and easier to compare between event types (6 lines in one plot). Also, adding information of fatalities offers audiences a better understanding of the severity of events.\nProposed state-level density map offers a more comprehensive view of the data, by showing frequency and distribution of events.\nProposed heatmap of event frequency between different groups allows audiences to know which two parties are frequently involved in an armed conflict. This information is very useful in preventing or mitigating future conflicts.\n4. Data Visualisation Step-by-Step\n4.1 Data Preparation\nImport Southeast-Asia_2010-2020_Oct31.xlsx file into tableau.\nChange the data type of Year to Date. \nSelect data between 2015 and 2020, by clicking Filters - Add from the top right-hand corner.\n\n\n\n\nChange the data type of Admin1 to Geographic Role -> State/Province.\nSimilarly, change the data type of Interaction to String.\n4.2 Creating Visualisation\n4.2.1 Spatial Analysis Dashboard\nOpen a new worksheet (to create an event density map).\nDouble click on Admin1 and drag Country to Detail. \nChange graph representation from Automatic to Map under Marks. \nDrag Event Type to Color and apply Measure -> count, to get total count of events for each state.\nDrag Country, Event Type, Event Date, Year to Filters and click Show Filter.\n\n\nChange the color palatte to Red. \nChange the style of map from Light to Normal (Map -> Map Layer -> Style -> Normal).\n\n\nOpen another new worksheet (to create a pie chart of event distribution).\nDrag Admin1, Country to Detail, Event Type to Color, and change graph representation from Automatic to Pie under Marks.\nDrag Event Type to Angle, applying Measure -> count (shown in step 4), Quick Table Calculation -> Percent of Total and Compute Using -> Event Type.\n\n\nSimilarly, drag Event Type to Label and apply the same procedure as in step 10. Final look of the pie chart:\nInclude the pie chart in the Tooltip of state-level event density map.\n\n\nOpen another new worksheet (to create a map of event exact location).\nDrag Longitude and Latitude to Columns and Rows respectively, and change both variables from Measure(Average) to Dimension.\nChange graph representation from Automatic to Shape under Marks and drag Event Type to Color and Shape, adjust the size. \nDrag Actor1, Actor2, Interaction to Detail and change Interaction from Measure(Count) to Dimension (as shown in step 14), allowing audiences to know which party is involved in each conflict, by hovering over the points.\nChange the style of map from Light to Normal (as shown in step 7).\nOpen a new dashboard.\nChange the size of dashboard to Generic Desktop. \nDrag 2 maps into dashboard and change representation of all filters excpet Event Date to Single Value (Dropdown).\nApply all filters on 2 maps, by adjusting Applying to Worksheets -> Selected Worksheets.\n\n\nEdit title of 2 maps. \nEdit unknown locations, by googling online.\n\n\nFinal look of Spatial Analysis Dashboard. \n4.2.2 Temporal Analysis Dashboard\nOpen a new worksheet (to create a line graph showing frequency of each event type over years).\nDrag Year and Event Type to Columns and Rows respectively, and change Event Type from Dimension to Measure(Count) (as shown in 4.2.1. step 14).\nDrag Event Type to Color.\nDrag Country, Event Date, Event Type to Filters and click Show Filter. Final look:\nOpen another new worksheet (to create a line graph showing count of fatalities by event type over years).\nDrag Year and Fatalities to Columns and Rows respectively and drag Event Type to Color. Final look:\nOpen another new worksheet (to create a heat map showing frequency of conflicts between two parties over years).\nDrag Year and Interaction to Columns and Rows respectively, and change Interaction from Measure(Count) to Dimension (as shown in 4.2.1. step 14).\nDrag Event Type to Color and change it from Dimension to Measure(Count) (as shown in 4.2.1. step 14).\nChange the color palatte to Red (as shown in 4.2.1. step 6). Final look:\nOpen a new dashboard.\nChange the size of dashboard to Generic Desktop (as shown in 4.2.1. step 19).\nDrag 1 heatmap and 2 line graphs into dashboard.\nChange representation of Event Type filter to Single Value (Dropdown) and representation of Country filter to Single Value (List) (as shown in 4.2.1. step 20).\nApply all filters on 3 graphs, by adjusting Applying to Worksheets -> Selected Worksheets (as shown in 4.2.1. step 21).\nEdit title of 3 graphs (as shown in 4.2.1. step 22).\nAdd a Text Object to dashboard, explaining the meaning of interaction code.\nFinal look of Temporal Analysis Dashboard. \n4.2.3 Main Dashboard\nDownload images of earth and calendar online, create a custom folder under My Tableau Repository -> Shapes and put images inside.\nCreate a calculated field named image, with value 0. \nOpen a new worksheet (to create a Button for Spatial Analysis Dashboard).\nDrag image to Detail and change graph representation from Automatic to Shape under Marks (as shown in 4.2.1. step 3).\nChange the default shape to the image of earth.\n\n\n\nChange the layout of the worksheet from Standard to Entire View.\nEdit the content of Tooltip to “click to view the spatial analysis” \nSimilarly, open a new worksheet (to create a Button for Temporal Analysis Dashboard) and a new worksheet (to create a Button for Return to the Main Dashboard).\nOpen a new dashboard and change the size of dashboard to Generic Desktop (as shown in 4.2.1. step 19).\nDrag 2 image worksheets into dashboard and add border. \nAdd a Text Object to dashboard (as shown in 4.2.2. step 17), giving a brief introduction of this data visualization.\nAdd an Image Object to dashboard.\n\n\nAdd 2 Text Object to dashboard as titles of spatial and temporal analysis dashboards, and change their background color.\nAdd interactivity on the Earth and Calendar worksheets.\n\n\n\n\n\nFinal look of Main Dashboard: \nSimilarly, add interactive Return Button on Spatial Analysis Dashboard and Temporal Analysis Dashboard.\n\n\n5. Major Observations\nAs we can see from the event density map, Shan province in Myanmar has the highest number of political conflicts between 2015-2020 and 63% of events in Shan are battles. By jumping to the Temporal Analysis Dashboard and select Shan, battles occurred most frequently in 2015, between state forces and rebel groups, resulting in more than 800 fatalities.\n\n\n\n\nAs we can see from the temporal heat map, the number of protests (1-sided protest) has been increasing over the years. By looking into spatial dashboard, the majority of protests took place in Jakarta.\n\n\nAlthough the number of protests is relatively high compared to other type of events, fatalities of protests are generally low, whereas violence against civilians occurred frequently between 2015 - 2020 and its fatalities are also high, peaking at 3569 in 2016. \nArmed conflicts between rebel groups and protestors, political militias and identity militias, identity militias and rioters, identity militias and external forces, protestors and civilians are very rare. \nPhilippine and Myanmar account for majority of the events occurring between 2015 and 2020, especially in battles and violence against civilian event types. In the events of riots, Indonesia makes up a larger proportion.\n\n\n\n\n\n\n\n\n\n",
    "preview": "posts/2021-03-21-dataviz-makeover-3/Critique.png",
    "last_modified": "2021-03-22T01:21:04+08:00",
    "input_file": "dataviz-makeover-3.utf8.md"
  },
  {
    "path": "posts/2021-02-28-group-project-proposal-data-visualization-survey-analysis/",
    "title": "Group project proposal: data visualization survey analysis",
    "description": {},
    "author": [
      {
        "name": "Bai Xinyue, Li Hongtng, Zhang Weimin",
        "url": {}
      }
    ],
    "date": "2021-02-28",
    "categories": [],
    "contents": "\n1. Introduction and Motivation\nData visualization is the graphical representation of information and data. It has been an important factor in data analytics pipeline, to reveal insights that are often difficult to be delivered in other forms. It is commonly used in various scenarios, such as data cleaning, exploring data structure, detecting pattern, identifying trends and clusters. It helps operations and management make informative decisions. Understanding the current state of data visualization is crucial. It gives organizations and practitioners in the field a better idea of where data visualization stands today, and where it’s headed.\nCollected and organized by Data Visualization Society, Annual Data visualization Community Survey includes 50+ data visualization related questions and covers data visualization details such as salary, tool use, demographic data, audiences and organizational structure. By analyzing the survey results, it can help organizations know who the data visualization professionals are and how they work. On the other hand, it helps people who have an interest in data visualization know how to enter the field.\n2.Objectives\nIn this research study, we will build a R Shiny application to illustrate the current state of data visualization. The goal is to draw a comprehensive picture of data visualization for organizations, practitioners and people having an interest in data visualization, by analyzing Annual Data visualization Community Survey.\nThe analysis and visualization consist of three parts: exploratory data analysis, respondents clustering and association analysis.\nThe exploratory data analysis aims to summarize the main characteristics of the measures and generate statistical graphics to visualize them.\nThe clustering aims to perform clustering analysis to discover similarities in respondents.\nTo provide DataViz practitioners a guidance what are the commonly used combination of tools.\n3. About the Data\nThe Annual Data Visualization Community Survey 2019 will be used for this project. This dataset includes responses from 1350 people. We classify the dataset into 5 different categories, challenges people face, demographics data, job-related, learning-related and tool-related questions. Below is a snippet of our dataset. Data source can be found from: https://github.com/data-visualization-society/data_visualization_survey.\n\n\n\nFigure 1: Survey content and category\n\n\n\n4. Methodology, approach and visualization\n4.1 EDA\nIn statistics, exploratory data analysis is an approach to analyzing data sets to summarize their main characteristics. We are going to use statistical graphics to visualize the results of EDA.\nBroadly, the questions will be categorized by field of topic. Five fields of topic could be recognized/ identified – Job, learning, demography and tool and challenge.\nFor the demography part, gender, education background, major and country lived of the data visualization professionals will be checked for distribution. Bar charts will be used here.\n\n\n\nFigure 2: Bar chart\n\n\n\nFor the learning part, the proportion of each learning methods can be detected. Pie charts will be used here.\n\n\n\nFigure 3: Donut chart\n\n\n\nFor the Job part, we can compare the proportion of each stage of data visualisation take part in a professional data visualization work. We can also check how many organizations have a data visualization team, how many data visualization professionals are hired to do data visualization only and what are the business areas data visualization supports. Pie charts will be used here.\nFor the tool part, the proportion of the technologies used to visualize data and the method used to present data visualization could be observed. Scatter plots with error bars will be used here to display the popularity of each kind of data visualisation technology and data visualization presentation methods. We can also break down the analysis using variables from the three fields above using a variable selection parameter and focus on measure value we are look at only.\n\n\n\nFigure 4: Dot chart with error bar\n\n\n\nFor the challenge part, the willingness of the data visualization professionals to keep improving their data visualisation skills and the area of priority to improve their data visualization skills could be investigated. Proportion of the levels of willingness and the areas for improvement could be examined. Scatter plots with error bars will be used here to present the probability of each level of willingness and area for improvement and projected the sample probability to the population one with a confidence interval. We can also break down the analysis using variables from the three fields above using a variable selection parameter and focus on measure value we are look at only.\n4.2 Respondents clustering:\nFor this dataset, we aim to perform clustering analysis to discover similarities in respondents. We classify the respondents based on their roles in the company, usage of visualization tools and purpose of making data visualization. We will use unsupervised clustering algorithm, latent class analysis (LCA), to show the relationship between respondents. LCA offers a way to uncover hidden groupings (latent classes) in multivariate categorical data, by applying maximum likelihood method to calculate the probability that a case will fall in a particular latent class.\n\n\n\nFigure 5: Latent class analysis example\n\n\n\nAlternatively, we can use dendrogram to show the hierarchical relationship between objects. Dendrogram starts with each object as a separate cluster, and joins the two most similar clusters to form a single compound cluster at each step. By examining the heights of the dendrogram, the similarity between the clusters and the order in which the clusters are joined can be derived.\n\n\n\nFigure 6: Dendrogram example\n\n\n\n4.3 Association rule mining\nAssociation Rule Mining is unsupervised machine learning method used to find an association between different objects in a set, and frequent patterns in a database. We will apply this technique to analyze association, e.g. data visualization software being used by professionals together. This allows data visualization professionals to consider associative tools and service providers to cross-selling associative products.\nCommonly used terminology in association include itemset, support, confidence, lift. Here, I will illustrate with below small size example.\n\n\n\nFigure 7: Sample data to explain association rule mining\n\n\n\nBelow is the definition of 3 key terminologies and illustration of calculation using above sample.\n\n\n\nFigure 8: Association rule mining terminology\n\n\n\nAPRIORI algorithm is used for association rule mining. It starts with frequent itemset generation and find all frequent item-sets satisfy pre-determined min-support count threshold. List all association rules from frequent item-sets. Calculate support and confidence for all rules and keep rules that satisfy min_support and min_confidence count. For each rule, we can use lift to examine the correlation of itemset A and itemset B.\nIn this part, we aim to present the confidence vs support situation for all rules like figure 1, and also allow users to select a specific rule or rules and present the details of rules.\n\n\n\nFigure 9: Confidence vs support for all rules\n\n\n\n\n\n\nFigure 10: Display rules with itemset\n\n\n\n5. Proposed R packages:\n\n\n\nFigure 11: Proposed R packages\n\n\n\n6. Project timeline\n\n\n\nFigure 12: Project Gantt chart\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-28-group-project-proposal-data-visualization-survey-analysis/1.png",
    "last_modified": "2021-03-21T11:38:34+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-28-dataviz-makeover-1/",
    "title": "My First R Markdown Document",
    "description": "A new article created using the Distill format.",
    "author": [
      {
        "name": "Dr. Kam Tin Seong",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\n1.0 Overview\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\nThere are three broad reasons for computing a correlation matrix.\nTo reveal the relationship between highdimensional variables pairwisely.\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\nRendering the value of a correlation to depict its sign and magnitude, and\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\n2.0 Installing and Launching R Packages\nBefore you get started, you are required:\nto start a new R project, and\nto create a new R Markdown document.\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\n\n\npackages = c('ggpubr', 'tidyverse')\n\nfor(p in packages){library\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n3.0 Importing and Preparing The Data Set\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\n3.1 Importing Data\nFirst, let us import the data into R by using read_csv() of readr package.\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\n\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\n4.0 Univariate EDA with Histogram\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\n\n\n\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\n\n\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ndensity <- ggplot(data=wine, aes(x= density)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\npH <- ggplot(data=wine, aes(x= pH)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\nNext, the ggarrange function of ggpur package is used to group these histograms together.\n\n\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n",
    "preview": "posts/2021-01-28-dataviz-makeover-1/distill-preview.png",
    "last_modified": "2021-01-28T12:08:32+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome",
    "description": "Welcome to my new blog for data visualisation. Hope you enjoy \nreading what I have to say!",
    "author": [
      {
        "name": "Bai Xinyue",
        "url": "https://www.linkedin.com/in/theabai/"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-21T11:39:42+08:00",
    "input_file": {}
  }
]
